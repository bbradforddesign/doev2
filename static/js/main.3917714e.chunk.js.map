{"version":3,"sources":["app/slices/auth.js","app/slices/transactions.js","app/slices/ui.js","app/slices/goals.js","app/theme/Theme.js","app/components/Login/Logout.js","app/components/Forms/LoginForm.js","app/utils/TransactionApi.js","app/components/Forms/TransactionForm.js","app/utils/GoalApi.js","app/components/Forms/GoalForm.js","app/components/Sidebar/MonthNav.js","app/components/Pages/ListBody.js","app/components/Graphs/CompoundBar.js","app/components/Graphs/PieChart.js","app/components/Graphs/LineGraph.js","app/components/Pages/Breakdown.js","app/App.js","serviceWorker.js","app/slices/index.js","index.js"],"names":["SERVER","process","authSlice","createSlice","name","initialState","loggedIn","message","reducers","setAuth","state","removeAuth","loadMessage","payload","actions","authSelector","auth","logoutUser","dispatch","a","fetch","method","credentials","console","log","transactionsSlice","loadingTransactions","hasErrorsTransactions","responseCode","all","monthlyTotals","monthly","categoryTotals","getTransactions","getMonthly","rows","getAll","setCode","getTransactionsSuccess","getTransactionsFailure","transactionsSelector","transactions","month","moment","format","uiSlice","loadMonth","uiSelector","ui","goalsSlice","loading","hasErrors","goals","totals","getGoals","getGoalsSuccess","getGoalsFailure","goalsSelector","theme","createMuiTheme","responsiveFontSizes","Logout","useDispatch","useSelector","Button","onClick","to","pathname","useStyles","makeStyles","formContainer","display","flexDirection","justifyContent","alignItems","width","height","formBody","formTextInput","margin","formButtons","alignSelf","formHeader","LoginForm","classes","useState","username","password","creds","setCreds","handleLogin","u","p","headers","Headers","body","JSON","stringify","status","handleRegister","response","handleCreds","e","target","value","Box","className","Paper","Typography","variant","align","color","TextField","type","label","autoComplete","onChange","style","marginBottom","disabled","abortController","AbortController","apiMethods","Create","category","description","amount","date","abort","Update","itemId","Delete","buttonLink","textDecoration","formModal","padding","position","formBackground","top","left","transform","backgroundColor","withRouter","props","item","setItem","routerProps","location","handleCreate","handleItem","useEffect","handleSubmit","history","replace","window","reload","id","InputLabelProps","shrink","fullWidth","required","select","placeholder","map","MenuItem","key","defaultValue","error","helperText","ButtonGroup","marginTop","formField","String","root","minWidth","MonthNav","active","IconButton","subtract","fontSize","htmlColor","add","breakpoints","up","scrollList","overflow","overflowY","head","ListBody","listCategory","selector","list","length","textAlign","marginLeft","created_date","paddingRight","down","GoalProgress","max","current","flex","CompoundBar","goalState","currentTotal","bars","Object","entries","push","PieChart","labels","datasets","hoverBackgroundColor","data","options","legend","chart","LineGraph","toSort","toSlice","sort","b","sortedMonths","slice","fill","lineTension","borderColor","borderWidth","maxes","responsive","maintainAspectRatio","title","spanGaps","scales","yAxes","ticks","maxTicksLimit","min","Math","toFixed","reduce","i","content","block","blockPie","tile","maxWidth","Breakdown","transactionState","All","Number","parseFloat","App","setTimeout","beginning","startOf","end","endOf","json","bottomNav","justifySelf","ThemeProvider","Container","path","render","BottomNavigation","showLabels","BottomNavigationAction","icon","component","Link","Boolean","hostname","match","rootReducer","combineReducers","transactionsReducer","goalsReducer","uiReducer","authReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3917714e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst SERVER = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const initialState = {\r\n  loggedIn: false,\r\n  message: \"\",\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setAuth: (state) => {\r\n      state.loggedIn = true;\r\n    },\r\n    removeAuth: (state) => {\r\n      state.loggedIn = false;\r\n    },\r\n    loadMessage: (state, { payload }) => {\r\n      state.message = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAuth, removeAuth, loadMessage } = authSlice.actions;\r\n\r\nexport const authSelector = (state) => state.auth;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport function loginUser(u, p) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(`${SERVER}/api/v1/users/login`, {\r\n        method: \"post\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          username: u,\r\n          password: p,\r\n        }),\r\n      });\r\n      if (response.status === 200) {\r\n        dispatch(setAuth());\r\n        dispatch(loadMessage(\"\"));\r\n      } else {\r\n        dispatch(loadMessage(\"Invalid username/password\"));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return async (dispatch) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/users/logout`, {\r\n        method: \"get\",\r\n        credentials: \"include\",\r\n      });\r\n      dispatch(removeAuth());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport function registerUser(u, p) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(`${SERVER}/api/v1/users`, {\r\n        method: \"post\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          username: u,\r\n          password: p,\r\n        }),\r\n      });\r\n      if (response.status >= 200 && response.status <= 300) {\r\n        dispatch(setAuth());\r\n        dispatch(loadMessage(\"\"));\r\n      } else {\r\n        dispatch(loadMessage(\"Username taken\"));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nconst SERVER = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const initialState = {\r\n  loadingTransactions: false,\r\n  hasErrorsTransactions: false,\r\n  responseCode: \"\",\r\n  all: [],\r\n  monthlyTotals: [],\r\n  monthly: [],\r\n  categoryTotals: [],\r\n};\r\n\r\nconst transactionsSlice = createSlice({\r\n  name: \"transactions\",\r\n  initialState,\r\n  reducers: {\r\n    getTransactions: (state) => {\r\n      state.loadingTransactions = true;\r\n    },\r\n    getMonthly: (state, { payload }) => {\r\n      state.monthly = payload.rows;\r\n      state.categoryTotals = payload.categoryTotals;\r\n    },\r\n    getAll: (state, { payload }) => {\r\n      state.all = payload.rows;\r\n      state.monthlyTotals = payload.monthlyTotals;\r\n    },\r\n    setCode: (state, { payload }) => {\r\n      state.responseCode = payload;\r\n    },\r\n    getTransactionsSuccess: (state) => {\r\n      state.loadingTransactions = false;\r\n      state.hasErrorsTransactions = false;\r\n    },\r\n    getTransactionsFailure: (state) => {\r\n      state.loadingTransactions = false;\r\n      state.hasErrorsTransactions = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getTransactions,\r\n  getTransactionsSuccess,\r\n  getTransactionsFailure,\r\n  getAll,\r\n  getMonthly,\r\n  setCode,\r\n} = transactionsSlice.actions;\r\n\r\nexport const transactionsSelector = (state) => state.transactions;\r\n\r\nexport default transactionsSlice.reducer;\r\n\r\nexport function fetchAll() {\r\n  return async (dispatch) => {\r\n    dispatch(getTransactions());\r\n    try {\r\n      const response = await fetch(`${SERVER}/api/v1/transactions/all`, {\r\n        method: \"get\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      dispatch(setCode(response.status));\r\n      dispatch(getAll(data));\r\n      dispatch(getTransactionsSuccess());\r\n    } catch (error) {\r\n      dispatch(getTransactionsFailure());\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchMonthly(month) {\r\n  return async (dispatch) => {\r\n    dispatch(getTransactions());\r\n    try {\r\n      const response = await fetch(`${SERVER}/api/v1/transactions/range`, {\r\n        method: \"post\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          beginning: moment(month).startOf(\"month\"),\r\n          end: moment(month).endOf(\"month\"),\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      dispatch(setCode(response.status));\r\n      dispatch(getMonthly(data));\r\n      dispatch(getTransactionsSuccess());\r\n    } catch (error) {\r\n      dispatch(getTransactionsFailure());\r\n    }\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nexport const initialState = {\r\n  month: moment().format(\"YYYY-MM-DD\"),\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState,\r\n  reducers: {\r\n    loadMonth: (state, { payload }) => {\r\n      state.month = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loadMonth } = uiSlice.actions;\r\n\r\nexport const uiSelector = (state) => state.ui;\r\n\r\nexport default uiSlice.reducer;\r\n\r\nexport function incMonth(month) {\r\n  return (dispatch) => {\r\n    dispatch(loadMonth(moment(month).add(1, \"months\").format(\"YYYY-MM-DD\")));\r\n  };\r\n}\r\n\r\nexport function decMonth(month) {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      loadMonth(moment(month).subtract(1, \"months\").format(\"YYYY-MM-DD\"))\r\n    );\r\n  };\r\n}\r\n\r\nexport function resetMonth() {\r\n  return (dispatch) => {\r\n    dispatch(loadMonth(moment()));\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst SERVER = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  goals: [],\r\n  totals: [],\r\n};\r\n\r\nconst goalsSlice = createSlice({\r\n  name: \"goals\",\r\n  initialState,\r\n  reducers: {\r\n    getGoals: (state) => {\r\n      state.loading = true;\r\n    },\r\n    getGoalsSuccess: (state, { payload }) => {\r\n      state.goals = payload.rows;\r\n      state.totals = payload.categoryTotals;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n    getGoalsFailure: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getGoals,\r\n  getGoalsSuccess,\r\n  getGoalsFailure,\r\n} = goalsSlice.actions;\r\n\r\nexport const goalsSelector = (state) => state.goals;\r\n\r\nexport default goalsSlice.reducer;\r\n\r\nexport function fetchGoals() {\r\n  return async (dispatch) => {\r\n    dispatch(getGoals());\r\n\r\n    try {\r\n      const response = await fetch(`${SERVER}/api/v1/goals/all`, {\r\n        method: \"get\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      });\r\n      if (response.status === 400) {\r\n        dispatch(getGoalsFailure());\r\n      } else {\r\n        const data = await response.json();\r\n        dispatch(getGoalsSuccess(data));\r\n      }\r\n    } catch (error) {\r\n      dispatch(getGoalsFailure());\r\n    }\r\n  };\r\n}\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser, authSelector } from \"../../slices/auth\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Logout = () => {\r\n  // moving auth from localstorage to redux\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(authSelector);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {auth.loggedIn ? (\r\n        <Button onClick={() => handleLogout()}>Logout</Button>\r\n      ) : (\r\n        <Redirect to={{ pathname: \"/login\" }} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Box, Typography, TextField, Paper, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, registerUser, authSelector } from \"../../slices/auth\";\r\n\r\nconst useStyles = makeStyles({\r\n  formContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100vw\",\r\n    height: \"70vh\",\r\n  },\r\n  formBody: {\r\n    width: \"300px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  formTextInput: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"80%\",\r\n    margin: \"5%\",\r\n  },\r\n  formButtons: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignSelf: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n    margin: \"5%\",\r\n  },\r\n  formHeader: {\r\n    margin: \"10%\",\r\n  },\r\n});\r\n\r\nconst LoginForm = () => {\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  // moving auth from localstorage to redux\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(authSelector);\r\n\r\n  const [creds, setCreds] = useState({ username: \"\", password: \"\" });\r\n\r\n  const handleLogin = () => {\r\n    dispatch(loginUser(creds.username, creds.password));\r\n  };\r\n\r\n  // creates new user in db. Automatically logs on with new jwt\r\n  const handleRegister = () => {\r\n    dispatch(registerUser(creds.username, creds.password));\r\n  };\r\n\r\n  const handleCreds = (e) => {\r\n    setCreds({\r\n      ...creds,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.formContainer}>\r\n      <Paper className={classes.formBody}>\r\n        {auth.loggedIn ? (\r\n          <Redirect to={{ pathname: \"/transaction\" }} />\r\n        ) : (\r\n          <>\r\n            <div className={classes.formHeader}>\r\n              <Typography variant=\"h3\">Welcome!</Typography>\r\n              <Typography variant=\"subtitle1\" align=\"center\">\r\n                Let's get started.\r\n              </Typography>\r\n            </div>\r\n            {auth.message && (\r\n              <Typography variant=\"subtitle1\" color=\"secondary\">\r\n                {auth.message}\r\n              </Typography>\r\n            )}\r\n            <div className={classes.formTextInput}>\r\n              <TextField\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"username\"\r\n                onChange={handleCreds}\r\n                style={{ marginBottom: \"10%\" }}\r\n              />\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                autoComplete=\"new-password\"\r\n                onChange={handleCreds}\r\n                style={{ marginBottom: \"10%\" }}\r\n              />\r\n            </div>\r\n            <div className={classes.formButtons}>\r\n              {creds.username && creds.password ? (\r\n                <>\r\n                  <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleRegister()}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleLogin()}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button variant=\"text\" color=\"primary\" disabled>\r\n                    Register\r\n                  </Button>\r\n                  <Button variant=\"contained\" color=\"primary\" disabled>\r\n                    Login\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","const SERVER = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst abortController = new AbortController();\r\n\r\nconst apiMethods = {\r\n  Create: async (category, description, amount, date) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/transactions`, {\r\n        method: \"post\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          category: category,\r\n          description: description,\r\n          amount: amount,\r\n          date: date,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n  Update: async (itemId, category, description, amount, date) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/transactions/${itemId}`, {\r\n        method: \"put\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          category: category,\r\n          description: description,\r\n          amount: amount,\r\n          date: date,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n  Delete: async (itemId) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/transactions/${itemId}`, {\r\n        method: \"delete\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n};\r\n\r\nexport default apiMethods;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport apiMethods from \"../../utils/TransactionApi\";\r\nimport moment from \"moment\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  Paper,\r\n  Button,\r\n  ButtonGroup,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  buttonLink: {\r\n    textDecoration: \"none\",\r\n  },\r\n  // the form container\r\n  formModal: {\r\n    padding: \"2%\",\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  // fades out everything outside the form\r\n  formBackground: {\r\n    position: \"fixed\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"rgba(200,200,200,.75)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst TransactionForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // store input before sending to db\r\n  const [item, setItem] = useState({\r\n    category: \"\",\r\n    amount: 0,\r\n    description: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const routerProps = props.location.props;\r\n\r\n  // interact with the api\r\n  const handleCreate = async () => {\r\n    apiMethods.Create(item.category, item.description, item.amount, item.date);\r\n  };\r\n  const handleUpdate = () => {\r\n    apiMethods.Update(\r\n      routerProps.id,\r\n      item.category,\r\n      item.description,\r\n      item.amount,\r\n      item.date\r\n    );\r\n  };\r\n  const handleDelete = () => {\r\n    apiMethods.Delete(routerProps.id);\r\n  };\r\n\r\n  // control inputs\r\n  const handleItem = (e) => {\r\n    setItem({\r\n      ...item,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // if editing, need to use existing values as defaults.\r\n  useEffect(() => {\r\n    if (routerProps) {\r\n      setItem({\r\n        category: routerProps.category,\r\n        amount: routerProps.amount,\r\n        description: routerProps.description,\r\n        date: routerProps.date,\r\n      });\r\n    }\r\n  }, [routerProps]);\r\n\r\n  // redirects to current page\r\n  const handleSubmit = () => {\r\n    props.history.replace(\"/transaction\");\r\n    window.location.reload();\r\n  };\r\n\r\n  // big list of categories to sort transactions. Need to simplify?\r\n  const categoryOptions = [\r\n    \"Housing\",\r\n    \"Transportation\",\r\n    \"Food\",\r\n    \"Utilities\",\r\n    \"Clothing\",\r\n    \"Healthcare\",\r\n    \"Insurance\",\r\n    \"Household Supplies\",\r\n    \"Personal\",\r\n    \"Debt\",\r\n    \"Retirement\",\r\n    \"Education\",\r\n    \"Savings\",\r\n    \"Gifts/Donations\",\r\n    \"Entertainment\",\r\n  ];\r\n\r\n  return (\r\n    <Box className={classes.formBackground}>\r\n      <Paper className={classes.formModal}>\r\n        <Typography variant=\"h2\">\r\n          {routerProps ? \"Edit Expense\" : \"New Expense\"}\r\n        </Typography>\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={moment(item.date).format(\"YYYY-MM-DD\")}\r\n          onChange={handleItem}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Category\"\r\n          id=\"category\"\r\n          select\r\n          name=\"category\"\r\n          value={item.category}\r\n          onChange={handleItem}\r\n          placeholder={routerProps ? routerProps.category : \"Category\"}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n          required\r\n        >\r\n          {categoryOptions.map((e) => (\r\n            <MenuItem value={e} key={e}>\r\n              {e}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          onChange={handleItem}\r\n          placeholder={\"Description\"}\r\n          defaultValue={routerProps && routerProps.description}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Amount\"\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          onChange={handleItem}\r\n          error={item.amount <= 0 ? true : false}\r\n          helperText={item.amount <= 0 && \"Amount must be greater than 0\"}\r\n          placeholder={\"Amount\"}\r\n          defaultValue={routerProps && routerProps.amount}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n          required\r\n        />\r\n        <ButtonGroup\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          style={{ marginTop: \"10%\" }}\r\n        >\r\n          <Link\r\n            to={{\r\n              pathname: \"/transaction\",\r\n            }}\r\n            className={classes.buttonLink}\r\n          >\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n          </Link>\r\n          {(routerProps || (item.amount && item.category)) && (\r\n            <Button\r\n              onClick={() => {\r\n                routerProps ? handleUpdate() : handleCreate();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n          {routerProps && (\r\n            <Button\r\n              onClick={() => {\r\n                handleDelete();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(TransactionForm);\r\n","const abortController = new AbortController();\r\n\r\nconst SERVER = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst apiMethods = {\r\n  Create: async (category, amount, date, description) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/goals`, {\r\n        method: \"post\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          category: category,\r\n          amount: amount,\r\n          date: date,\r\n          description: description,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n  Update: async (itemId, category, amount, date, description) => {\r\n    try {\r\n      await fetch(`${SERVER}/api/v1/goals/${itemId}`, {\r\n        method: \"put\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        body: JSON.stringify({\r\n          category: category,\r\n          amount: amount,\r\n          date: date,\r\n          description: description,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n  Delete: async (itemId) => {\r\n    try {\r\n      await fetch(`${SERVER}S/api/v1/goals/${itemId}`, {\r\n        method: \"delete\",\r\n        credentials: \"include\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => abortController.abort();\r\n  },\r\n};\r\n\r\nexport default apiMethods;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport apiMethods from \"../../utils/GoalApi\";\r\nimport moment from \"moment\";\r\nimport {\r\n  TextField,\r\n  MenuItem,\r\n  Paper,\r\n  Button,\r\n  ButtonGroup,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  buttonLink: {\r\n    textDecoration: \"none\",\r\n  },\r\n  formModal: {\r\n    padding: \"2%\",\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  formBackground: {\r\n    position: \"fixed\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"rgba(200,200,200,.75)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst GoalForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // local state to store input before sending to db\r\n  const [item, setItem] = useState({\r\n    category: \"\",\r\n    amount: 0,\r\n    date: moment().format(\"YYYY/MM/DD\"),\r\n  });\r\n\r\n  const routerProps = props.location.props;\r\n\r\n  const handleCreate = () => {\r\n    apiMethods.Create(item.category, item.amount, item.date);\r\n  };\r\n  const handleUpdate = () => {\r\n    apiMethods.Update(routerProps.id, item.category, item.amount, item.date);\r\n  };\r\n  const handleDelete = () => {\r\n    apiMethods.Delete(routerProps.id);\r\n  };\r\n  const handleItem = (e) => {\r\n    setItem({\r\n      ...item,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (routerProps) {\r\n      setItem({\r\n        category: routerProps.category,\r\n        amount: routerProps.amount,\r\n      });\r\n    }\r\n  }, [routerProps]);\r\n\r\n  // redirects to current page\r\n  const handleSubmit = () => {\r\n    props.history.replace(\"/goal\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const categoryOptions = [\r\n    \"Housing\",\r\n    \"Transportation\",\r\n    \"Food\",\r\n    \"Utilities\",\r\n    \"Clothing\",\r\n    \"Healthcare\",\r\n    \"Insurance\",\r\n    \"Household Supplies\",\r\n    \"Personal\",\r\n    \"Debt\",\r\n    \"Retirement\",\r\n    \"Education\",\r\n    \"Savings\",\r\n    \"Gifts/Donations\",\r\n    \"Entertainment\",\r\n  ];\r\n\r\n  return (\r\n    <Box className={classes.formBackground}>\r\n      <Paper className={classes.formModal}>\r\n        <Typography variant=\"h2\">\r\n          {routerProps ? \"Edit Goal\" : \"New Goal\"}\r\n        </Typography>\r\n        <TextField\r\n          label=\"Category\"\r\n          id=\"category\"\r\n          select\r\n          name=\"category\"\r\n          value={item.category}\r\n          onChange={handleItem}\r\n          placeholder={routerProps ? routerProps.category : \"Category\"}\r\n          className={classes.formField}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n          required\r\n        >\r\n          {categoryOptions.map((e) => (\r\n            <MenuItem value={e} key={e}>\r\n              {e}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          label=\"Amount\"\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          onChange={handleItem}\r\n          value={item.amount}\r\n          error={item.amount < 1 ? true : false}\r\n          helperText={item.amount < 1 && \"Amount must be greater than 0\"}\r\n          placeholder={routerProps ? String(routerProps.amount) : \"Amount\"}\r\n          className={classes.formField}\r\n          margin=\"normal\"\r\n          fullWidth={true}\r\n          required\r\n        />\r\n        <ButtonGroup\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          style={{ marginTop: \"10%\" }}\r\n        >\r\n          <Link\r\n            to={{\r\n              pathname: \"/goal\",\r\n            }}\r\n            className={classes.buttonLink}\r\n          >\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n          </Link>\r\n          {(routerProps || (item.amount && item.category)) && (\r\n            <Button\r\n              onClick={() => {\r\n                routerProps ? handleUpdate() : handleCreate();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n\r\n          {routerProps && (\r\n            <Button\r\n              onClick={() => {\r\n                handleDelete();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n        </ButtonGroup>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withRouter(GoalForm);\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { uiSelector, incMonth, decMonth, resetMonth } from \"../../slices/ui\";\r\nimport { Typography, ButtonGroup, IconButton, Paper } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// styling and breakpoints\r\nconst useStyles = makeStyles((theme) => ({\r\n  theme,\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    padding: \"0 2%\",\r\n    width: \"96%\",\r\n    minWidth: \"400px\",\r\n    margin: \"2vh 0\",\r\n    backgroundColor: \"rgb(75,100,255)\",\r\n    color: \"#FFF\",\r\n  },\r\n}));\r\n\r\nconst MonthNav = () => {\r\n  const classes = useStyles();\r\n\r\n  const active = useSelector(uiSelector);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"h3\" align=\"left\">\r\n        {moment(active.month).format(\"MMM YYYY\")}\r\n      </Typography>\r\n      <ButtonGroup>\r\n        <IconButton onClick={() => dispatch(decMonth(active.month))}>\r\n          <ArrowBackIcon fontSize=\"large\" htmlColor=\"#FFF\" />\r\n        </IconButton>\r\n        <IconButton onClick={() => dispatch(resetMonth())}>\r\n          <ReplayIcon fontSize=\"large\" htmlColor=\"#FFF\" />\r\n        </IconButton>\r\n        <IconButton onClick={() => dispatch(incMonth(active.month))}>\r\n          <ArrowForwardIcon fontSize=\"large\" htmlColor=\"#FFF\" />\r\n        </IconButton>\r\n      </ButtonGroup>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MonthNav;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Typography, Box, Paper, IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// styling and breakpoints\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  scrollList: {\r\n    overflow: \"hidden\",\r\n    overflowY: \"scroll\",\r\n    height: \"70%\",\r\n    width: \"100%\",\r\n    margin: \"5% 0\",\r\n  },\r\n  body: {\r\n    height: \"85%\",\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"50%\",\r\n      height: \"90%\",\r\n      alignSelf: \"flex-start\",\r\n    },\r\n  },\r\n  head: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ListBody = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // determine which list to render based on props\r\n  const listCategory = props.type;\r\n  const state = useSelector(props.selector);\r\n  const list = listCategory === \"goal\" ? state.goals : state.monthly;\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <Box className={classes.head}>\r\n        <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\r\n          {listCategory === \"goal\" ? \"Spending Goals\" : \"Monthly Expenses\"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\" style={{ marginTop: \"5%\" }}>\r\n          {listCategory === \"goal\"\r\n            ? \"Set budgeting goals for any category\"\r\n            : \"Track expenses for each month\"}\r\n        </Typography>\r\n      </Box>\r\n      <Box className={classes.body}>\r\n        {list.length > 0 ? (\r\n          <Paper className={classes.scrollList}>\r\n            <ul>\r\n              {list.map((e) => (\r\n                <li key={e.id}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection:\r\n                        listCategory === \"transaction\" ? \"row\" : \"row-reverse\",\r\n                      alignItems: \"flex-start\",\r\n                      justifyContent: \"space-between\",\r\n                      marginBottom: \"5%\",\r\n                    }}\r\n                  >\r\n                    {listCategory === \"transaction\" ? (\r\n                      <>\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          textAlign=\"left\"\r\n                          style={{ alignSelf: \"center\", marginLeft: \"3%\" }}\r\n                        >\r\n                          <strong>\r\n                            {e.category} -{\" \"}\r\n                            {moment(e.created_date).format(\"MM/DD/YYYY\")}\r\n                          </strong>\r\n                        </Typography>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/edit/transaction`,\r\n                            props: {\r\n                              id: e.id,\r\n                              category: e.category,\r\n                              amount: e.amount,\r\n                              description: e.description,\r\n                            },\r\n                          }}\r\n                        >\r\n                          <IconButton>\r\n                            <EditIcon fontSize=\"small\" color=\"primary\" />\r\n                          </IconButton>\r\n                        </Link>\r\n                      </>\r\n                    ) : (\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/edit/goal`,\r\n                          props: {\r\n                            id: e.id,\r\n                            category: e.category,\r\n                            amount: e.amount,\r\n                            description: e.description,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <IconButton>\r\n                          <EditIcon fontSize=\"small\" color=\"primary\" />\r\n                        </IconButton>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                      padding: \"0 3%\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"subtitle1\">{e.category}</Typography>\r\n                    <Typography variant=\"subtitle1\">\r\n                      <strong>${e.amount}</strong>\r\n                    </Typography>\r\n                  </div>\r\n                  <hr style={{ margin: \"0 3%\" }} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </Paper>\r\n        ) : (\r\n          <Paper\r\n            className={classes.scrollList}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {listCategory === \"transaction\" ? (\r\n              <Typography variant=\"subtitle1\">\r\n                No expenses recorded.\r\n                <br />\r\n                Let's get started!\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"subtitle1\">\r\n                No spending goals set.\r\n                <br />\r\n                Let's get started!\r\n              </Typography>\r\n            )}\r\n          </Paper>\r\n        )}\r\n        <Link to={`/create/${listCategory}`} style={{ textDecoration: \"none\" }}>\r\n          <Paper\r\n            style={{\r\n              backgroundColor: \"rgb(75,100,255)\",\r\n              paddingRight: \"15px\",\r\n            }}\r\n          >\r\n            <IconButton>\r\n              <AddCircleIcon fontSize=\"large\" htmlColor=\"white\" />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"caption\"\r\n              align=\"center\"\r\n              className=\"CreateButton\"\r\n            >\r\n              Create\r\n            </Typography>\r\n          </Paper>\r\n        </Link>\r\n      </Box>\r\n    </section>\r\n  );\r\n};\r\n\r\nListBody.propTypes = {\r\n  type: PropTypes.string,\r\n  selector: PropTypes.func,\r\n};\r\n\r\nexport default ListBody;\r\n","import React from \"react\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// styling and breakpoints\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"0 5%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      height: \"90%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"30vh\",\r\n    },\r\n  },\r\n  scrollList: {\r\n    padding: \"0 3% 0 0\",\r\n    height: \"75%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      overflow: \"hidden\",\r\n      overflowY: \"scroll\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst GoalProgress = (props) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"8px\",\r\n        width: \"100%\",\r\n        marginBottom: \"8px\",\r\n      }}\r\n    >\r\n      <Box\r\n        style={{\r\n          backgroundColor:\r\n            props.max <= props.current\r\n              ? \"rgb(225,125,125)\"\r\n              : \"rgb(125,255,125)\",\r\n          flex: props.current,\r\n        }}\r\n      />\r\n      <Box\r\n        className=\"growBar\"\r\n        style={{\r\n          backgroundColor: \"#f0f0f0\",\r\n          flex: props.max >= props.current ? props.max - props.current : 0,\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CompoundBar = (props) => {\r\n  // pull goals from redux store\r\n  const goalState = props.goalState;\r\n  const totals = goalState.totals;\r\n  const currentTotal = props.totals;\r\n\r\n  const bars = [];\r\n\r\n  for (const [key, value] of Object.entries(totals)) {\r\n    if (key !== \"All\") {\r\n      bars.push({ category: key, amount: value });\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Goal Progress\r\n      </Typography>\r\n      {bars.length > 0 ? (\r\n        <ul className={classes.scrollList}>\r\n          {bars.map((e) => (\r\n            <li key={e.category}>\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography variant=\"subtitle2\">{e.category}</Typography>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ alignSelf: \"flex-end\" }}\r\n                >\r\n                  ${currentTotal[e.category] ? currentTotal[e.category] : 0} / $\r\n                  {e.amount} Spent\r\n                </Typography>\r\n              </Box>\r\n              <GoalProgress\r\n                max={e.amount}\r\n                current={\r\n                  currentTotal[e.category] ? currentTotal[e.category] : 0\r\n                }\r\n                label={e.label}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <Box\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"70%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"subtitle1\">\r\n            No goals set.\r\n            <br />\r\n            Set spending goals to view progress!\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CompoundBar;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  head: {\r\n    marginBottom: \"5%\",\r\n  },\r\n}));\r\n\r\nconst PieChart = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const totals = props.totals;\r\n\r\n  const state = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\r\n          \"#B21F00\",\r\n          \"#C9DE00\",\r\n          \"#2FDE00\",\r\n          \"#00A6B4\",\r\n          \"#6800B4\",\r\n        ],\r\n        hoverBackgroundColor: [\r\n          \"#501800\",\r\n          \"#4B5000\",\r\n          \"#175000\",\r\n          \"#003350\",\r\n          \"#35014F\",\r\n        ],\r\n        data: [],\r\n      },\r\n    ],\r\n  };\r\n\r\n  // insert each category's name and total into the pie chart\r\n  for (const [key, value] of Object.entries(totals)) {\r\n    if (key !== \"All\") {\r\n      if (!state.labels[key]) {\r\n        state.labels.push(key);\r\n        state.datasets[0].data.push(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h3\" align=\"center\" className={classes.head}>\r\n        Categories\r\n      </Typography>\r\n      <Doughnut\r\n        data={state}\r\n        height={280}\r\n        options={{\r\n          legend: {\r\n            display: true,\r\n            position: \"bottom\",\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { transactionsSelector } from \"../../slices/transactions\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    padding: \"5px 15px\",\r\n  },\r\n  chart: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"80%\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\",\r\n      marginBottom: \"5%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst LineGraph = () => {\r\n  const classes = useStyles();\r\n\r\n  // pull transaction totals by month from store\r\n  const transactionState = useSelector(transactionsSelector);\r\n  const monthlyTotals = transactionState.monthlyTotals;\r\n\r\n  // need to sort months by date\r\n  const toSort = [];\r\n  for (const month in monthlyTotals) {\r\n    toSort.push([month, monthlyTotals[month]]);\r\n  }\r\n  const toSlice = toSort.sort(\r\n    (a, b) => moment(a[0], \"MM YY\") - moment(b[0], \"MM YY\")\r\n  );\r\n\r\n  // limit number of months displayed to 12\r\n  const sortedMonths =\r\n    toSlice.length > 12 ? toSlice.slice(toSlice.length - 12) : toSlice;\r\n\r\n  // config for graph\r\n  const state = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Monthly Total\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        borderWidth: 2,\r\n        data: [],\r\n      },\r\n    ],\r\n  };\r\n\r\n  // store max values for calculations within notes section\r\n  const maxes = [];\r\n\r\n  // push data from sorted array into the graph\r\n  sortedMonths.map((e) => {\r\n    state.labels.push(e[0]);\r\n    state.datasets[0].data.push(e[1]);\r\n    maxes.push(e[1]);\r\n  });\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h4\">Monthly Trends</Typography>\r\n      {maxes.length > 0 ? (\r\n        <Box className={classes.body}>\r\n          <div className={classes.chart}>\r\n            <Line\r\n              data={state}\r\n              height={260}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n                title: {\r\n                  display: false,\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                },\r\n                spanGaps: true,\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      ticks: {\r\n                        maxTicksLimit: 6,\r\n                        min: 0,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" align=\"right\">\r\n              Max\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" align=\"right\">\r\n              ${Math.max(...maxes).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"right\">\r\n              Min\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" align=\"right\">\r\n              {\" \"}\r\n              ${Math.min(...maxes).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"right\">\r\n              Avg\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" align=\"right\">\r\n              ${(maxes.reduce((i, e) => i + e) / maxes.length).toFixed(2)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"right\" color=\"primary\">\r\n              Total\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" align=\"right\" color=\"primary\">\r\n              ${maxes.reduce((i, e) => i + e).toFixed(2)}\r\n            </Typography>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <Typography variant=\"h3\">No transactions recorded.</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { goalsSelector } from \"../../slices/goals\";\r\nimport { transactionsSelector } from \"../../slices/transactions\";\r\nimport { uiSelector } from \"../../slices/ui\";\r\nimport CompoundBar from \"../Graphs/CompoundBar\";\r\nimport PieChart from \"../Graphs/PieChart\";\r\nimport LineGraph from \"../Graphs/LineGraph\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"80vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n      width: \"100%\",\r\n      overflow: \"hidden\",\r\n      overflowY: \"scroll\",\r\n    },\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"100%\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  block: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"30%\",\r\n      height: \"100%\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  blockPie: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"40%\",\r\n      height: \"100%\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  tile: {\r\n    margin: \"0 0 2%\",\r\n    padding: \"2% 0\",\r\n    width: \"95%\",\r\n    maxWidth: \"400px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: \"10%\",\r\n    },\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"70%\",\r\n    width: \"70%\",\r\n    margin: \"10% 0\",\r\n    padding: \"0 5%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"40%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Breakdown = () => {\r\n  const classes = useStyles();\r\n\r\n  const transactionState = useSelector(transactionsSelector);\r\n  const goalState = useSelector(goalsSelector);\r\n\r\n  const totals = transactionState.categoryTotals;\r\n\r\n  const active = useSelector(uiSelector);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {\r\n        // assert that data exists for graphs. otherwise, display message\r\n        totals.All > 0 ? (\r\n          <Box className={classes.content}>\r\n            <Box className={classes.block}>\r\n              <Typography variant=\"h2\" align=\"center\">\r\n                Spending Breakdown\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h6\"\r\n                align=\"center\"\r\n                style={{ margin: \"5% 0 10%\" }}\r\n              >\r\n                This month's total: ${Number.parseFloat(totals.All).toFixed(2)}\r\n              </Typography>\r\n            </Box>\r\n            <Box className={classes.blockPie}>\r\n              <Paper className={classes.tile}>\r\n                <PieChart totals={totals} />\r\n              </Paper>\r\n            </Box>\r\n            <Box className={classes.block}>\r\n              <Paper className={classes.tile}>\r\n                <CompoundBar\r\n                  goalState={goalState}\r\n                  totals={totals}\r\n                  month={active.month}\r\n                />\r\n              </Paper>\r\n              <Paper className={classes.tile}>\r\n                <LineGraph />\r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\r\n              Spending Breakdown\r\n            </Typography>\r\n            <Paper className={classes.message}>\r\n              <Typography variant=\"subtitle1\">\r\n                This month doesn't have any expenses on record. Record\r\n                transactions for this month to receive insights!\r\n              </Typography>\r\n            </Paper>\r\n          </>\r\n        )\r\n      }\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breakdown;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\n// redux imports\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser, authSelector } from \"./slices/auth\";\r\nimport {\r\n  fetchMonthly,\r\n  fetchAll,\r\n  transactionsSelector,\r\n} from \"./slices/transactions\";\r\nimport { uiSelector } from \"./slices/ui\";\r\nimport { fetchGoals, goalsSelector } from \"./slices/goals\";\r\n\r\n// material-ui imports\r\nimport {\r\n  Container,\r\n  Button,\r\n  Box,\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport TrackChangesIcon from \"@material-ui/icons/TrackChanges\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport theme from \"./theme/Theme\";\r\n\r\n// button that clears auth and redirects to login\r\nimport Logout from \"./components/Login/Logout\";\r\n\r\n// forms\r\nimport LoginForm from \"./components/Forms/LoginForm\";\r\nimport TransactionForm from \"./components/Forms/TransactionForm\";\r\nimport GoalForm from \"./components/Forms/GoalForm\";\r\n\r\n// persistent navbar\r\nimport MonthNav from \"./components/Sidebar/MonthNav\";\r\n\r\n// page bodies for react-router\r\nimport ListBody from \"./components/Pages/ListBody\";\r\nimport Breakdown from \"./components/Pages/Breakdown\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // is the user logged in?\r\n  const auth = useSelector(authSelector);\r\n\r\n  // fetch data on mount/update when actions dispatched\r\n  const { monthly, responseCode } = useSelector(transactionsSelector);\r\n  const active = useSelector(uiSelector);\r\n\r\n  // logout the user after two hours\r\n  setTimeout(() => {\r\n    dispatch(logoutUser);\r\n  }, 1000 * 60 * 120);\r\n\r\n  // on mount, fetch transactions to render\r\n  useEffect(() => {\r\n    if (auth.loggedIn === true) {\r\n      dispatch(fetchMonthly(active.month));\r\n      dispatch(fetchGoals());\r\n      dispatch(fetchAll());\r\n    }\r\n  }, [dispatch, auth, active.month]);\r\n\r\n  // styling and breakpoints\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"93vh\",\r\n      flexDirection: \"column\",\r\n    },\r\n    bottomNav: {\r\n      alignSelf: \"flex-end\",\r\n      justifySelf: \"center\",\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // only render if logged in successfully. otherwise, display message\r\n  const protectedContent = () => {\r\n    if (responseCode !== 200) {\r\n      return (\r\n        <Box\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            width: \"100vw\",\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          {\r\n            // was log in successful? if not, display error\r\n            responseCode !== 200 ? (\r\n              <Typography variant=\"h2\">Error {responseCode} :(</Typography>\r\n            ) : (\r\n              <Typography variant=\"h2\">Redirecting...</Typography>\r\n            )\r\n          }\r\n          {\r\n            // if user is logged out, prompt to log back in. otherwise, assume backend error.\r\n            responseCode === 400 ? (\r\n              <Typography variant=\"body1\">\r\n                Your session has expired. Please log out and sign back in.\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body1\">\r\n                An error has occurred with our system. Please try again later!\r\n              </Typography>\r\n            )\r\n          }\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {monthly && (\r\n          <>\r\n            <div>\r\n              <div className={classes.root}>\r\n                <MonthNav />\r\n                <Switch>\r\n                  <Route path=\"/transaction\">\r\n                    <ListBody\r\n                      selector={transactionsSelector}\r\n                      type=\"transaction\"\r\n                    />\r\n                  </Route>\r\n                  <Route path=\"/goal\">\r\n                    <ListBody selector={goalsSelector} type=\"goal\" />\r\n                  </Route>\r\n                  <Route path=\"/breakdown\">\r\n                    <Breakdown />\r\n                  </Route>\r\n                  <Route path=\"/create/transaction\">\r\n                    <TransactionForm />\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/edit/transaction\"\r\n                    render={(props) => <TransactionForm {...props} />}\r\n                  />\r\n                  <Route path=\"/create/goal\">\r\n                    <GoalForm />\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/edit/goal\"\r\n                    render={(props) => <GoalForm {...props} />}\r\n                  />\r\n                </Switch>\r\n              </div>\r\n              <BottomNavigation showLabels className={classes.bottomNav}>\r\n                <BottomNavigationAction\r\n                  label=\"Transactions\"\r\n                  icon={<CreateIcon />}\r\n                  component={Link}\r\n                  to=\"/transaction\"\r\n                />\r\n                <BottomNavigationAction\r\n                  label=\"Goals\"\r\n                  icon={<TrackChangesIcon />}\r\n                  component={Link}\r\n                  to=\"/goal\"\r\n                />\r\n                <BottomNavigationAction\r\n                  label=\"Breakdown\"\r\n                  icon={<PieChartIcon />}\r\n                  component={Link}\r\n                  to=\"/breakdown\"\r\n                />\r\n              </BottomNavigation>\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Container>\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row-reverse\",\r\n              alignItems: \"center\",\r\n              height: \"8vh\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {auth.loggedIn ? (\r\n              <>\r\n                <Logout />\r\n              </>\r\n            ) : (\r\n              <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                <Button>Login</Button>\r\n              </Link>\r\n            )}\r\n          </Box>\r\n\r\n          <Route path=\"/login\">\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <LoginForm />\r\n            </Box>\r\n          </Route>\r\n\r\n          {auth.loggedIn ? protectedContent() : <Redirect to=\"/login\" />}\r\n        </Container>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport transactionsReducer from \"./transactions\";\r\nimport goalsReducer from \"./goals\";\r\nimport uiReducer from \"./ui\";\r\nimport authReducer from \"./auth\";\r\n\r\nconst rootReducer = combineReducers({\r\n  transactions: transactionsReducer,\r\n  goals: goalsReducer,\r\n  ui: uiReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport rootReducer from \"./app/slices\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nlet persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}